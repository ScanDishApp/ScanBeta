{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neuye\\\\Desktop\\\\scan\\\\ScanBeta\\\\src\\\\screens\\\\ScanScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './ScreenStyle/Scan.css'; // Import the external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scan = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [recognizedText, setRecognizedText] = useState('');\n  const fileInputRef = useRef(null);\n  const videoRef = useRef(null);\n  const handleImageUpload = event => {\n    const image = event.target.files[0];\n    setSelectedImage(URL.createObjectURL(image));\n  };\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleCameraScan = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      } catch (error) {\n        console.error('Error accessing camera:', error);\n      }\n    }\n  };\n  const captureImage = async () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = videoRef.current.videoWidth;\n    canvas.height = videoRef.current.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    const imageData = canvas.toDataURL('image/jpeg');\n    const result = await Tesseract.recognize(imageData);\n    setRecognizedText(result.data.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ScanScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2699\\uFE0F Scan...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        ref: fileInputRef,\n        style: {\n          display: 'none'\n        } // Hide the file input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleButtonClick,\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleCameraScan,\n        children: \"Scan with Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this), recognizedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recognized Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recognizedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Scan, \"YFy5kGPRZHcNBGSWjtozj2SXhLw=\");\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["React","useState","useRef","Tesseract","jsxDEV","_jsxDEV","Scan","_s","selectedImage","setSelectedImage","recognizedText","setRecognizedText","fileInputRef","videoRef","handleImageUpload","event","image","target","files","URL","createObjectURL","handleButtonClick","current","click","handleCameraScan","navigator","mediaDevices","getUserMedia","stream","video","srcObject","play","error","console","captureImage","canvas","document","createElement","width","videoWidth","height","videoHeight","context","getContext","drawImage","imageData","toDataURL","result","recognize","data","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","style","display","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Neuye/Desktop/scan/ScanBeta/src/screens/ScanScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport './ScreenStyle/Scan.css'; // Import the external CSS file\r\n\r\nconst Scan = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const fileInputRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n\r\n  const handleImageUpload = (event) => {\r\n    const image = event.target.files[0];\r\n    setSelectedImage(URL.createObjectURL(image));\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleCameraScan = async () => {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n      } catch (error) {\r\n        console.error('Error accessing camera:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const captureImage = async () => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = videoRef.current.videoWidth;\r\n    canvas.height = videoRef.current.videoHeight;\r\n    const context = canvas.getContext('2d');\r\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n    const imageData = canvas.toDataURL('image/jpeg');\r\n    const result = await Tesseract.recognize(imageData);\r\n    setRecognizedText(result.data.text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"scan-container\">\r\n      <h1>ScanScreen</h1>\r\n      <div className=\"rectangle-grid\">\r\n        <div className=\"rectangle\">\r\n          <h2>⚙️ Scan...</h2>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          ref={fileInputRef}\r\n          style={{ display: 'none' }} // Hide the file input\r\n        />\r\n        <button className=\"button\" onClick={handleButtonClick}>Choose File</button>\r\n        <button className=\"button\" onClick={handleCameraScan}>Scan with Camera</button>\r\n        {selectedImage && <img src={selectedImage} alt=\"Selected\" />}\r\n        {recognizedText && (\r\n          <div>\r\n            <h2>Recognized Text:</h2>\r\n            <p>{recognizedText}</p>\r\n          </div>\r\n        )}\r\n        <video ref={videoRef} style={{ display: 'none' }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scan;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}