{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neuye\\\\Desktop\\\\scan\\\\ScanBeta\\\\src\\\\screens\\\\ScanScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './ScreenStyle/Scan.css'; // Import the external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scan = () => {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [recognizedText, setRecognizedText] = useState('');\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handleCameraButtonClick = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n    } catch (err) {\n      console.error('Error accessing camera:', err);\n    }\n  };\n  const handleCaptureButtonClick = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n    const capturedImage = canvasRef.current.toDataURL('image/png');\n    setSelectedImage(capturedImage);\n    recognizeText(); // Call recognizeText after selecting the image\n  };\n  const recognizeText = async () => {\n    if (selectedImage) {\n      const result = await Tesseract.recognize(selectedImage);\n      setRecognizedText(result.data.text);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scan-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ScanScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2699\\uFE0F Scan...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleCameraButtonClick,\n        children: \"Open Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: handleCaptureButtonClick,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage,\n        alt: \"Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recognized Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recognizedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Scan, \"GIRN1pcrfWz4seIdRC2HILCLSHI=\");\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["React","useState","useRef","Tesseract","jsxDEV","_jsxDEV","Scan","_s","selectedImage","setSelectedImage","recognizedText","setRecognizedText","videoRef","canvasRef","handleCameraButtonClick","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","console","error","handleCaptureButtonClick","context","getContext","drawImage","width","height","capturedImage","toDataURL","recognizeText","result","recognize","data","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","style","display","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Neuye/Desktop/scan/ScanBeta/src/screens/ScanScreen.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport './ScreenStyle/Scan.css'; // Import the external CSS file\r\n\r\nconst Scan = () => {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleCameraButtonClick = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      videoRef.current.srcObject = stream;\r\n    } catch (err) {\r\n      console.error('Error accessing camera:', err);\r\n    }\r\n  };\r\n\r\n  const handleCaptureButtonClick = () => {\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    const capturedImage = canvasRef.current.toDataURL('image/png');\r\n    setSelectedImage(capturedImage);\r\n    recognizeText(); // Call recognizeText after selecting the image\r\n  };\r\n\r\n  const recognizeText = async () => {\r\n    if (selectedImage) {\r\n      const result = await Tesseract.recognize(selectedImage);\r\n      setRecognizedText(result.data.text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"scan-container\">\r\n      <h1>ScanScreen</h1>\r\n      <div className=\"rectangle-grid\">\r\n        <div className=\"rectangle\">\r\n          <h2>⚙️ Scan...</h2>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button className=\"button\" onClick={handleCameraButtonClick}>Open Camera</button>\r\n        <button className=\"button\" onClick={handleCaptureButtonClick}>Capture</button>\r\n        <video ref={videoRef} autoPlay={true} style={{ display: 'none' }} />\r\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n        {selectedImage && <img src={selectedImage} alt=\"Selected\" />}\r\n        {selectedImage && (\r\n          <div>\r\n            <h2>Recognized Text:</h2>\r\n            <p>{recognizedText}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scan;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}